<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.superstar.dao.shop.GoodsAttributeValueMapper" >
  <resultMap id="BaseResultMap" type="com.superstar.model.shop.GoodsAttributeValue" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="key_id" property="keyId" jdbcType="BIGINT" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="INTEGER" />
    <result column="is_default_select" property="isDefaultSelect" jdbcType="BIT" />
    <result column="is_enable_select" property="isEnableSelect" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, key_id, value, position, is_default_select, is_enable_select
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.superstar.model.shop.GoodsAttributeValueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sho_goods_attribute_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sho_goods_attribute_value
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sho_goods_attribute_value
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.superstar.model.shop.GoodsAttributeValueExample" >
    delete from sho_goods_attribute_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.superstar.model.shop.GoodsAttributeValue" >
    insert into sho_goods_attribute_value (id, key_id, value, 
      position, is_default_select, is_enable_select
      )
    values (#{id,jdbcType=BIGINT}, #{keyId,jdbcType=BIGINT}, #{value,jdbcType=VARCHAR}, 
      #{position,jdbcType=INTEGER}, #{isDefaultSelect,jdbcType=BIT}, #{isEnableSelect,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.superstar.model.shop.GoodsAttributeValue" >
    insert into sho_goods_attribute_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="keyId != null" >
        key_id,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="isDefaultSelect != null" >
        is_default_select,
      </if>
      <if test="isEnableSelect != null" >
        is_enable_select,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="keyId != null" >
        #{keyId,jdbcType=BIGINT},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=INTEGER},
      </if>
      <if test="isDefaultSelect != null" >
        #{isDefaultSelect,jdbcType=BIT},
      </if>
      <if test="isEnableSelect != null" >
        #{isEnableSelect,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update sho_goods_attribute_value
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.keyId != null" >
        key_id = #{record.keyId,jdbcType=BIGINT},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=INTEGER},
      </if>
      <if test="record.isDefaultSelect != null" >
        is_default_select = #{record.isDefaultSelect,jdbcType=BIT},
      </if>
      <if test="record.isEnableSelect != null" >
        is_enable_select = #{record.isEnableSelect,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sho_goods_attribute_value
    set id = #{record.id,jdbcType=BIGINT},
      key_id = #{record.keyId,jdbcType=BIGINT},
      value = #{record.value,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=INTEGER},
      is_default_select = #{record.isDefaultSelect,jdbcType=BIT},
      is_enable_select = #{record.isEnableSelect,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.superstar.model.shop.GoodsAttributeValue" >
    update sho_goods_attribute_value
    <set >
      <if test="keyId != null" >
        key_id = #{keyId,jdbcType=BIGINT},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="isDefaultSelect != null" >
        is_default_select = #{isDefaultSelect,jdbcType=BIT},
      </if>
      <if test="isEnableSelect != null" >
        is_enable_select = #{isEnableSelect,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.superstar.model.shop.GoodsAttributeValue" >
    update sho_goods_attribute_value
    set key_id = #{keyId,jdbcType=BIGINT},
      value = #{value,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      is_default_select = #{isDefaultSelect,jdbcType=BIT},
      is_enable_select = #{isEnableSelect,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>