<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.superstar.dao.system.UserMapper" >
  <resultMap id="BaseResultMap" type="com.superstar.model.system.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="is_enabled" property="isEnabled" jdbcType="BIT" />
    <result column="disabled_reason" property="disabledReason" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="identifying_code" property="identifyingCode" jdbcType="VARCHAR" />
    <result column="current_role" property="currentRole" jdbcType="INTEGER" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, nick, picture, username, password, phone, qq, wechat, email, is_deleted, 
    is_enabled, disabled_reason, token, identifying_code, current_role, id_card, cname, 
    create_user, create_time, update_time, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.superstar.model.system.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.superstar.model.system.UserExample" >
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.superstar.model.system.User" >
    insert into sys_user (user_id, nick, picture, 
      username, password, phone, 
      qq, wechat, email, 
      is_deleted, is_enabled, disabled_reason, 
      token, identifying_code, current_role, 
      id_card, cname, create_user, 
      create_time, update_time, update_user
      )
    values (#{userId,jdbcType=BIGINT}, #{nick,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=BIT}, #{isEnabled,jdbcType=BIT}, #{disabledReason,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{identifyingCode,jdbcType=VARCHAR}, #{currentRole,jdbcType=INTEGER}, 
      #{idCard,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.superstar.model.system.User" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nick != null" >
        nick,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="disabledReason != null" >
        disabled_reason,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="identifyingCode != null" >
        identifying_code,
      </if>
      <if test="currentRole != null" >
        current_role,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="cname != null" >
        cname,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nick != null" >
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="disabledReason != null" >
        #{disabledReason,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="identifyingCode != null" >
        #{identifyingCode,jdbcType=VARCHAR},
      </if>
      <if test="currentRole != null" >
        #{currentRole,jdbcType=INTEGER},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.nick != null" >
        nick = #{record.nick,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null" >
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=BIT},
      </if>
      <if test="record.disabledReason != null" >
        disabled_reason = #{record.disabledReason,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyingCode != null" >
        identifying_code = #{record.identifyingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.currentRole != null" >
        current_role = #{record.currentRole,jdbcType=INTEGER},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null" >
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      nick = #{record.nick,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      is_enabled = #{record.isEnabled,jdbcType=BIT},
      disabled_reason = #{record.disabledReason,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      identifying_code = #{record.identifyingCode,jdbcType=VARCHAR},
      current_role = #{record.currentRole,jdbcType=INTEGER},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.superstar.model.system.User" >
    update sys_user
    <set >
      <if test="nick != null" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="disabledReason != null" >
        disabled_reason = #{disabledReason,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="identifyingCode != null" >
        identifying_code = #{identifyingCode,jdbcType=VARCHAR},
      </if>
      <if test="currentRole != null" >
        current_role = #{currentRole,jdbcType=INTEGER},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.superstar.model.system.User" >
    update sys_user
    set nick = #{nick,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      is_enabled = #{isEnabled,jdbcType=BIT},
      disabled_reason = #{disabledReason,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      identifying_code = #{identifyingCode,jdbcType=VARCHAR},
      current_role = #{currentRole,jdbcType=INTEGER},
      id_card = #{idCard,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>



  <select id="findOneWithRolesByLogin" parameterType="java.lang.String" resultMap="BaseResultMap">

    SELECT u.*,GROUP_CONCAT(DISTINCT r.role_id) AS role_id,GROUP_CONCAT(DISTINCT r.role_name) AS role_name,GROUP_CONCAT(DISTINCT r.role_cname) AS role_cname
    FROM sys_user u
    LEFT JOIN sys_user_role ur
    ON u.user_id = ur.user_id
    LEFT JOIN sys_role r
    ON ur.role_id = r.role_id
    WHERE u.is_deleted=0 and (u.user_id = #{loginName,jdbcType=BIGINT} or u.phone= #{loginName,jdbcType=VARCHAR} or u.username = #{loginName,jdbcType=VARCHAR})
    GROUP BY u.user_id,r.role_id
  </select>

  <select id="findOneWithRolesByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">

    SELECT u.*,GROUP_CONCAT(DISTINCT r.role_id) AS role_id,GROUP_CONCAT(DISTINCT r.role_name) AS role_name,GROUP_CONCAT(DISTINCT r.role_cname) AS role_cname
    FROM sys_user u
    LEFT JOIN sys_user_role ur
    ON u.user_id = ur.user_id
    LEFT JOIN sys_role r
    ON ur.role_id = r.role_id
    WHERE u.is_deleted=0 and u.user_id = #{userId,jdbcType=BIGINT}
    GROUP BY u.user_id,r.role_id
  </select>
</mapper>